/* ***** BEGIN LICENSE BLOCK *****
;; Roadsend PHP Compiler
;;
;; Copyright (c) 2009 Shannon Weyrick <weyrick@roadsend.com>
;;
;; This program is free software; you can redistribute it and/or
;; modify it under the terms of the GNU General Public License
;; as published by the Free Software Foundation; either version 2
;; of the License, or (at your option) any later version.
;;
;; This program is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;; GNU General Public License for more details.
;;
;; You should have received a copy of the GNU General Public License
;; along with this program; if not, write to the Free Software
;; Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
   ***** END LICENSE BLOCK *****
*/

// This is another trick from the clang handbook for defining the AST nodes and order consistently
#ifndef EXPR
#  define EXPR(Type, Base) STMT(Type, Base)
#endif

STMT(block,     stmt)
STMT(emptyStmt, stmt)
STMT(ifStmt,    stmt)
STMT(echoStmt,  stmt)

// decl (see decl::first and last kind constants)
// FIRST DECL
STMT(functionDecl, decl)
// LAST DECL

// expr (see expr::first and last kind constants)
// FIRST EXPR
EXPR(assignment,     expr)
EXPR(var,            expr)
EXPR(functionInvoke,    expr)
EXPR(unaryOp, expr)

// literal (see literalExpr::first and last kind constants)
// FIRST LITERALEXPR
EXPR(literalString, literalExpr)
EXPR(literalInt,    literalExpr)
EXPR(literalFloat,  literalExpr)
EXPR(literalNull,   literalExpr)
EXPR(literalBool,   literalExpr)
EXPR(literalArray,  literalExpr)
EXPR(inlineHtml,    literalExpr)
// LAST LITERALEXPR
// LAST EXPR

#undef STMT